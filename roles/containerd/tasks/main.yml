---
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/
# https://github.com/containerd/containerd/blob/main/docs/getting-started.md
- name: Install containerd on Debian systems
  when: ansible_os_family == "Debian"
  block:
    - name: Add an apt signing key for Docker
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add apt repository for stable version
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version_name }} stable
        state: present
        filename: docker.list
    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ provisioning_username }}"
        group: docker
    - name: Install containerd
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: latest
        update_cache: true
      vars:
        packages:
          - containerd.io
      notify:
        - Start containerd
    # commented as it makes kubeadmin stops with "[ERROR CRI]: container runtime is not running"
    # - name: Create containerd config.toml
    #   ansible.builtin.command:
    #     cmd: |
    #       containerd config default | sudo tee /etc/containerd/config.toml
    #       sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
    #     creates: /etc/containerd/config.toml
    #   notify:
    #     - Restart containerd
    - name: Install the CNI plugin for the Containerd installation
      ansible.builtin.command:
        # https://github.com/containernetworking/plugins/releases
        cmd: |
          wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
          mkdir -p /opt/cni/bin
          tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.1.1.tgz
        creates: /opt/cni/bin
      notify:
        - Restart containerd
